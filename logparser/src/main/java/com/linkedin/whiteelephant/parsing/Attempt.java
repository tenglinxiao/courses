/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.whiteelephant.parsing;  
@SuppressWarnings("all")
public class Attempt extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Attempt\",\"namespace\":\"com.linkedin.whiteelephant.parsing\",\"fields\":[{\"name\":\"jobId\",\"type\":\"string\"},{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"TaskType\",\"symbols\":[\"MAP\",\"REDUCE\"]}},{\"name\":\"taskId\",\"type\":\"string\"},{\"name\":\"taskAttemptId\",\"type\":\"string\"},{\"name\":\"taskStatus\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"TaskStatus\",\"symbols\":[\"SUCCESS\",\"FAILED\",\"KILLED\"]}]},{\"name\":\"startTime\",\"type\":[\"long\",\"null\"]},{\"name\":\"finishTime\",\"type\":[\"long\",\"null\"]},{\"name\":\"shuffleFinished\",\"type\":[\"long\",\"null\"]},{\"name\":\"sortFinished\",\"type\":[\"long\",\"null\"]},{\"name\":\"counters\",\"type\":{\"type\":\"map\",\"values\":\"long\"}},{\"name\":\"derived\",\"type\":{\"type\":\"record\",\"name\":\"DerivedAttemptData\",\"fields\":[{\"name\":\"excess\",\"type\":[\"boolean\",\"null\"]},{\"name\":\"minutes\",\"type\":[\"double\",\"null\"]},{\"name\":\"cpuMinutes\",\"type\":[\"double\",\"null\"]}]}}]}");
  @Deprecated public java.lang.CharSequence jobId;
  @Deprecated public com.linkedin.whiteelephant.parsing.TaskType type;
  @Deprecated public java.lang.CharSequence taskId;
  @Deprecated public java.lang.CharSequence taskAttemptId;
  @Deprecated public com.linkedin.whiteelephant.parsing.TaskStatus taskStatus;
  @Deprecated public java.lang.Long startTime;
  @Deprecated public java.lang.Long finishTime;
  @Deprecated public java.lang.Long shuffleFinished;
  @Deprecated public java.lang.Long sortFinished;
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.Long> counters;
  @Deprecated public com.linkedin.whiteelephant.parsing.DerivedAttemptData derived;

  /**
   * Default constructor.
   */
  public Attempt() {}

  /**
   * All-args constructor.
   */
  public Attempt(java.lang.CharSequence jobId, com.linkedin.whiteelephant.parsing.TaskType type, java.lang.CharSequence taskId, java.lang.CharSequence taskAttemptId, com.linkedin.whiteelephant.parsing.TaskStatus taskStatus, java.lang.Long startTime, java.lang.Long finishTime, java.lang.Long shuffleFinished, java.lang.Long sortFinished, java.util.Map<java.lang.CharSequence,java.lang.Long> counters, com.linkedin.whiteelephant.parsing.DerivedAttemptData derived) {
    this.jobId = jobId;
    this.type = type;
    this.taskId = taskId;
    this.taskAttemptId = taskAttemptId;
    this.taskStatus = taskStatus;
    this.startTime = startTime;
    this.finishTime = finishTime;
    this.shuffleFinished = shuffleFinished;
    this.sortFinished = sortFinished;
    this.counters = counters;
    this.derived = derived;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return jobId;
    case 1: return type;
    case 2: return taskId;
    case 3: return taskAttemptId;
    case 4: return taskStatus;
    case 5: return startTime;
    case 6: return finishTime;
    case 7: return shuffleFinished;
    case 8: return sortFinished;
    case 9: return counters;
    case 10: return derived;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: jobId = (java.lang.CharSequence)value$; break;
    case 1: type = (com.linkedin.whiteelephant.parsing.TaskType)value$; break;
    case 2: taskId = (java.lang.CharSequence)value$; break;
    case 3: taskAttemptId = (java.lang.CharSequence)value$; break;
    case 4: taskStatus = (com.linkedin.whiteelephant.parsing.TaskStatus)value$; break;
    case 5: startTime = (java.lang.Long)value$; break;
    case 6: finishTime = (java.lang.Long)value$; break;
    case 7: shuffleFinished = (java.lang.Long)value$; break;
    case 8: sortFinished = (java.lang.Long)value$; break;
    case 9: counters = (java.util.Map<java.lang.CharSequence,java.lang.Long>)value$; break;
    case 10: derived = (com.linkedin.whiteelephant.parsing.DerivedAttemptData)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'jobId' field.
   */
  public java.lang.CharSequence getJobId() {
    return jobId;
  }

  /**
   * Sets the value of the 'jobId' field.
   * @param value the value to set.
   */
  public void setJobId(java.lang.CharSequence value) {
    this.jobId = value;
  }

  /**
   * Gets the value of the 'type' field.
   */
  public com.linkedin.whiteelephant.parsing.TaskType getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(com.linkedin.whiteelephant.parsing.TaskType value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'taskId' field.
   */
  public java.lang.CharSequence getTaskId() {
    return taskId;
  }

  /**
   * Sets the value of the 'taskId' field.
   * @param value the value to set.
   */
  public void setTaskId(java.lang.CharSequence value) {
    this.taskId = value;
  }

  /**
   * Gets the value of the 'taskAttemptId' field.
   */
  public java.lang.CharSequence getTaskAttemptId() {
    return taskAttemptId;
  }

  /**
   * Sets the value of the 'taskAttemptId' field.
   * @param value the value to set.
   */
  public void setTaskAttemptId(java.lang.CharSequence value) {
    this.taskAttemptId = value;
  }

  /**
   * Gets the value of the 'taskStatus' field.
   */
  public com.linkedin.whiteelephant.parsing.TaskStatus getTaskStatus() {
    return taskStatus;
  }

  /**
   * Sets the value of the 'taskStatus' field.
   * @param value the value to set.
   */
  public void setTaskStatus(com.linkedin.whiteelephant.parsing.TaskStatus value) {
    this.taskStatus = value;
  }

  /**
   * Gets the value of the 'startTime' field.
   */
  public java.lang.Long getStartTime() {
    return startTime;
  }

  /**
   * Sets the value of the 'startTime' field.
   * @param value the value to set.
   */
  public void setStartTime(java.lang.Long value) {
    this.startTime = value;
  }

  /**
   * Gets the value of the 'finishTime' field.
   */
  public java.lang.Long getFinishTime() {
    return finishTime;
  }

  /**
   * Sets the value of the 'finishTime' field.
   * @param value the value to set.
   */
  public void setFinishTime(java.lang.Long value) {
    this.finishTime = value;
  }

  /**
   * Gets the value of the 'shuffleFinished' field.
   */
  public java.lang.Long getShuffleFinished() {
    return shuffleFinished;
  }

  /**
   * Sets the value of the 'shuffleFinished' field.
   * @param value the value to set.
   */
  public void setShuffleFinished(java.lang.Long value) {
    this.shuffleFinished = value;
  }

  /**
   * Gets the value of the 'sortFinished' field.
   */
  public java.lang.Long getSortFinished() {
    return sortFinished;
  }

  /**
   * Sets the value of the 'sortFinished' field.
   * @param value the value to set.
   */
  public void setSortFinished(java.lang.Long value) {
    this.sortFinished = value;
  }

  /**
   * Gets the value of the 'counters' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.Long> getCounters() {
    return counters;
  }

  /**
   * Sets the value of the 'counters' field.
   * @param value the value to set.
   */
  public void setCounters(java.util.Map<java.lang.CharSequence,java.lang.Long> value) {
    this.counters = value;
  }

  /**
   * Gets the value of the 'derived' field.
   */
  public com.linkedin.whiteelephant.parsing.DerivedAttemptData getDerived() {
    return derived;
  }

  /**
   * Sets the value of the 'derived' field.
   * @param value the value to set.
   */
  public void setDerived(com.linkedin.whiteelephant.parsing.DerivedAttemptData value) {
    this.derived = value;
  }

  /** Creates a new Attempt RecordBuilder */
  public static com.linkedin.whiteelephant.parsing.Attempt.Builder newBuilder() {
    return new com.linkedin.whiteelephant.parsing.Attempt.Builder();
  }
  
  /** Creates a new Attempt RecordBuilder by copying an existing Builder */
  public static com.linkedin.whiteelephant.parsing.Attempt.Builder newBuilder(com.linkedin.whiteelephant.parsing.Attempt.Builder other) {
    return new com.linkedin.whiteelephant.parsing.Attempt.Builder(other);
  }
  
  /** Creates a new Attempt RecordBuilder by copying an existing Attempt instance */
  public static com.linkedin.whiteelephant.parsing.Attempt.Builder newBuilder(com.linkedin.whiteelephant.parsing.Attempt other) {
    return new com.linkedin.whiteelephant.parsing.Attempt.Builder(other);
  }
  
  /**
   * RecordBuilder for Attempt instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Attempt>
    implements org.apache.avro.data.RecordBuilder<Attempt> {

    private java.lang.CharSequence jobId;
    private com.linkedin.whiteelephant.parsing.TaskType type;
    private java.lang.CharSequence taskId;
    private java.lang.CharSequence taskAttemptId;
    private com.linkedin.whiteelephant.parsing.TaskStatus taskStatus;
    private java.lang.Long startTime;
    private java.lang.Long finishTime;
    private java.lang.Long shuffleFinished;
    private java.lang.Long sortFinished;
    private java.util.Map<java.lang.CharSequence,java.lang.Long> counters;
    private com.linkedin.whiteelephant.parsing.DerivedAttemptData derived;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.whiteelephant.parsing.Attempt.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.whiteelephant.parsing.Attempt.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing Attempt instance */
    private Builder(com.linkedin.whiteelephant.parsing.Attempt other) {
            super(com.linkedin.whiteelephant.parsing.Attempt.SCHEMA$);
      if (isValidValue(fields()[0], other.jobId)) {
        this.jobId = (java.lang.CharSequence) data().deepCopy(fields()[0].schema(), other.jobId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.type)) {
        this.type = (com.linkedin.whiteelephant.parsing.TaskType) data().deepCopy(fields()[1].schema(), other.type);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.taskId)) {
        this.taskId = (java.lang.CharSequence) data().deepCopy(fields()[2].schema(), other.taskId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.taskAttemptId)) {
        this.taskAttemptId = (java.lang.CharSequence) data().deepCopy(fields()[3].schema(), other.taskAttemptId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.taskStatus)) {
        this.taskStatus = (com.linkedin.whiteelephant.parsing.TaskStatus) data().deepCopy(fields()[4].schema(), other.taskStatus);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.startTime)) {
        this.startTime = (java.lang.Long) data().deepCopy(fields()[5].schema(), other.startTime);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.finishTime)) {
        this.finishTime = (java.lang.Long) data().deepCopy(fields()[6].schema(), other.finishTime);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.shuffleFinished)) {
        this.shuffleFinished = (java.lang.Long) data().deepCopy(fields()[7].schema(), other.shuffleFinished);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.sortFinished)) {
        this.sortFinished = (java.lang.Long) data().deepCopy(fields()[8].schema(), other.sortFinished);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.counters)) {
        this.counters = (java.util.Map<java.lang.CharSequence,java.lang.Long>) data().deepCopy(fields()[9].schema(), other.counters);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.derived)) {
        this.derived = (com.linkedin.whiteelephant.parsing.DerivedAttemptData) data().deepCopy(fields()[10].schema(), other.derived);
        fieldSetFlags()[10] = true;
      }
    }

    /** Gets the value of the 'jobId' field */
    public java.lang.CharSequence getJobId() {
      return jobId;
    }
    
    /** Sets the value of the 'jobId' field */
    public com.linkedin.whiteelephant.parsing.Attempt.Builder setJobId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.jobId = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'jobId' field has been set */
    public boolean hasJobId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'jobId' field */
    public com.linkedin.whiteelephant.parsing.Attempt.Builder clearJobId() {
      jobId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'type' field */
    public com.linkedin.whiteelephant.parsing.TaskType getType() {
      return type;
    }
    
    /** Sets the value of the 'type' field */
    public com.linkedin.whiteelephant.parsing.Attempt.Builder setType(com.linkedin.whiteelephant.parsing.TaskType value) {
      validate(fields()[1], value);
      this.type = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'type' field */
    public com.linkedin.whiteelephant.parsing.Attempt.Builder clearType() {
      type = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'taskId' field */
    public java.lang.CharSequence getTaskId() {
      return taskId;
    }
    
    /** Sets the value of the 'taskId' field */
    public com.linkedin.whiteelephant.parsing.Attempt.Builder setTaskId(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.taskId = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'taskId' field has been set */
    public boolean hasTaskId() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'taskId' field */
    public com.linkedin.whiteelephant.parsing.Attempt.Builder clearTaskId() {
      taskId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'taskAttemptId' field */
    public java.lang.CharSequence getTaskAttemptId() {
      return taskAttemptId;
    }
    
    /** Sets the value of the 'taskAttemptId' field */
    public com.linkedin.whiteelephant.parsing.Attempt.Builder setTaskAttemptId(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.taskAttemptId = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'taskAttemptId' field has been set */
    public boolean hasTaskAttemptId() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'taskAttemptId' field */
    public com.linkedin.whiteelephant.parsing.Attempt.Builder clearTaskAttemptId() {
      taskAttemptId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'taskStatus' field */
    public com.linkedin.whiteelephant.parsing.TaskStatus getTaskStatus() {
      return taskStatus;
    }
    
    /** Sets the value of the 'taskStatus' field */
    public com.linkedin.whiteelephant.parsing.Attempt.Builder setTaskStatus(com.linkedin.whiteelephant.parsing.TaskStatus value) {
      validate(fields()[4], value);
      this.taskStatus = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'taskStatus' field has been set */
    public boolean hasTaskStatus() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'taskStatus' field */
    public com.linkedin.whiteelephant.parsing.Attempt.Builder clearTaskStatus() {
      taskStatus = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'startTime' field */
    public java.lang.Long getStartTime() {
      return startTime;
    }
    
    /** Sets the value of the 'startTime' field */
    public com.linkedin.whiteelephant.parsing.Attempt.Builder setStartTime(java.lang.Long value) {
      validate(fields()[5], value);
      this.startTime = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'startTime' field has been set */
    public boolean hasStartTime() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'startTime' field */
    public com.linkedin.whiteelephant.parsing.Attempt.Builder clearStartTime() {
      startTime = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'finishTime' field */
    public java.lang.Long getFinishTime() {
      return finishTime;
    }
    
    /** Sets the value of the 'finishTime' field */
    public com.linkedin.whiteelephant.parsing.Attempt.Builder setFinishTime(java.lang.Long value) {
      validate(fields()[6], value);
      this.finishTime = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'finishTime' field has been set */
    public boolean hasFinishTime() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'finishTime' field */
    public com.linkedin.whiteelephant.parsing.Attempt.Builder clearFinishTime() {
      finishTime = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'shuffleFinished' field */
    public java.lang.Long getShuffleFinished() {
      return shuffleFinished;
    }
    
    /** Sets the value of the 'shuffleFinished' field */
    public com.linkedin.whiteelephant.parsing.Attempt.Builder setShuffleFinished(java.lang.Long value) {
      validate(fields()[7], value);
      this.shuffleFinished = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'shuffleFinished' field has been set */
    public boolean hasShuffleFinished() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'shuffleFinished' field */
    public com.linkedin.whiteelephant.parsing.Attempt.Builder clearShuffleFinished() {
      shuffleFinished = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'sortFinished' field */
    public java.lang.Long getSortFinished() {
      return sortFinished;
    }
    
    /** Sets the value of the 'sortFinished' field */
    public com.linkedin.whiteelephant.parsing.Attempt.Builder setSortFinished(java.lang.Long value) {
      validate(fields()[8], value);
      this.sortFinished = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'sortFinished' field has been set */
    public boolean hasSortFinished() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'sortFinished' field */
    public com.linkedin.whiteelephant.parsing.Attempt.Builder clearSortFinished() {
      sortFinished = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'counters' field */
    public java.util.Map<java.lang.CharSequence,java.lang.Long> getCounters() {
      return counters;
    }
    
    /** Sets the value of the 'counters' field */
    public com.linkedin.whiteelephant.parsing.Attempt.Builder setCounters(java.util.Map<java.lang.CharSequence,java.lang.Long> value) {
      validate(fields()[9], value);
      this.counters = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'counters' field has been set */
    public boolean hasCounters() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'counters' field */
    public com.linkedin.whiteelephant.parsing.Attempt.Builder clearCounters() {
      counters = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'derived' field */
    public com.linkedin.whiteelephant.parsing.DerivedAttemptData getDerived() {
      return derived;
    }
    
    /** Sets the value of the 'derived' field */
    public com.linkedin.whiteelephant.parsing.Attempt.Builder setDerived(com.linkedin.whiteelephant.parsing.DerivedAttemptData value) {
      validate(fields()[10], value);
      this.derived = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'derived' field has been set */
    public boolean hasDerived() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'derived' field */
    public com.linkedin.whiteelephant.parsing.Attempt.Builder clearDerived() {
      derived = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    @Override
    public Attempt build() {
      try {
        Attempt record = new Attempt();
        record.jobId = fieldSetFlags()[0] ? this.jobId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.type = fieldSetFlags()[1] ? this.type : (com.linkedin.whiteelephant.parsing.TaskType) defaultValue(fields()[1]);
        record.taskId = fieldSetFlags()[2] ? this.taskId : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.taskAttemptId = fieldSetFlags()[3] ? this.taskAttemptId : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.taskStatus = fieldSetFlags()[4] ? this.taskStatus : (com.linkedin.whiteelephant.parsing.TaskStatus) defaultValue(fields()[4]);
        record.startTime = fieldSetFlags()[5] ? this.startTime : (java.lang.Long) defaultValue(fields()[5]);
        record.finishTime = fieldSetFlags()[6] ? this.finishTime : (java.lang.Long) defaultValue(fields()[6]);
        record.shuffleFinished = fieldSetFlags()[7] ? this.shuffleFinished : (java.lang.Long) defaultValue(fields()[7]);
        record.sortFinished = fieldSetFlags()[8] ? this.sortFinished : (java.lang.Long) defaultValue(fields()[8]);
        record.counters = fieldSetFlags()[9] ? this.counters : (java.util.Map<java.lang.CharSequence,java.lang.Long>) defaultValue(fields()[9]);
        record.derived = fieldSetFlags()[10] ? this.derived : (com.linkedin.whiteelephant.parsing.DerivedAttemptData) defaultValue(fields()[10]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
